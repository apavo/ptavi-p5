 Creación de repositorio para la práctica

1. Con el navegador, dirígete al repositorio ptavi-p5 en la cuenta del profesor en GitHub1 y realiza un fork, de manera que consigas tener una copia del repositorio en tu cuenta de GitHub. Clona el repositorio que acabas de crear a local para poder editar los archivos. Trabaja a partir de ahora en ese repositorio, sincronizando los cambios que vayas realizando.

Como tarde al final de la práctica, deberás realizar un push para subir tus cambios a tu repositorio en GitHub. En esta práctica, al contrario que con las demás, se recomienda hacer frecuentes commits, pero el push al final.

================================================================================
================================================================================

Análisis de una sesión SIP

Se ha capturado una sesión SIP (archivo sip.cap.gz), que se puede abrir con Wireshark2. Se pide rellenar las cuestiones que se plantean en este guión en el fichero p5.txt que encontrarás también en el repositorio.

2. Observa que las tramas capturadas corresponden a una sesión SIP con Ekiga, un cliente de VoIP para GNOME. Responde a las siguientes cuestiones:
 ** ¿Cuántos paquetes componen la captura?
        954 paquetes
 ** ¿Cuánto tiempo dura la captura?
        56,149345 segundos
 ** ¿Qué IP tiene la máquina donde se ha efectuado la captura? ¿Se trata de una IP pública o de una IP privada? ¿Por qué lo sabes?
        La IP de la maquina es 192.168.1.34 . Se trata de una ip privada ya que se encuentra en el rango 
        192.168.0.0 – 192.168.255.255 que es privado.

3. Antes de analizar las tramas, mira las estadísticas generales que aparecen en el menú de Statistics. En el apartado de jerarquía de protocolos (Protocol Hierarchy) se puede ver el porcentaje del tráfico correspondiente al protocolo TCP y UDP.
 ** ¿Cuál de los dos es mayor? ¿Es esto consistente con una aplicación que transmite en tiempo real?
        El porcentaje de paquetes UDP es mayor. Si porque RTP se enapsula sobre UDP y TCP no sirve para aplicaciones en tiempo
        real 
 ** ¿Qué otros protocolos podemos ver en la jerarquía de protocolos?
        UDP,TCP,RTP,RTCP,HTTP,ICMP,H.261,CLASSIC-STUN,SIP,DNS


4. Observa por encima el flujo de tramas en el menú de Statistics en IO Graphs. La captura que estamos viendo incluye desde la inicialización (registro) de la aplicación hasta su finalización, con una llamada entremedias.
 ** Filtra por sip para conocer cuándo se envían paquetes SIP. ¿En qué segundos tienen lugar esos envíos?
    SIP aparece en los segundos 7,14,16,38,39,55 
 ** Y los paquetes con RTP, ¿cuándo se envían?
    Del segundo 17 al 38 se envian paquetes RTP excluyendo el segundo 22


[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

5. Analiza las primeras cuatro tramas de la captura nada más arrancar Ekiga.
 ** ¿Qué servicio es el utilizado en estas tramas?
        El protocolo DNS
 ** ¿Cuál es la dirección IP del servidor de nombres del ordenador que ha lanzado Ekiga?
       El servidor de nombres usa la direccion IP 80.58.61.250
 ** ¿Qué dirección IP (de ekiga.net) devuelve el servicio de nombres?
        La direccion devuelta 86.64.162.35
 ** ¿Por qué se pide también para 35.162.64.86.in-addr.arpa?
        Es una peticion dns inversa es decir enviamos una direccion IP y preguntamos por el nombre, al contrario que normalmente
        que pedimos una direccion IP 


6. A continuación, hay más de una docena de tramas TCP/HTTP.
 ** ¿Podrías decir la URL que se está pidiendo?
        URL:http://ekiga.net/ip/ que es una direccion IP en concreto la suya
 ** ¿Qué user agent (UA) la está pidiendo?
        USER AGENT: Ekiga
 ** ¿Qué devuelve el servidor?
        El servidor devuelve una direccion IP en concreto la 83.36.48.212
        
 ** Si lanzamos el navegador web, por ejemplo, Mozilla Firefox, y vamos a la misma URL, ¿qué recibimos? ¿Qué es, entonces, lo que está respondiendo el servidor?
    Devuelve la direccion IP del ordenador en concreto la 193.147.49.123

7. Hasta la trama 45 se puede observar una secuencia de tramas del protocolo STUN.
 ** ¿Por qué crees que se hace uso de este protocolo en esta captura? Busca en la Wikipedia.
        Porque STUN es un protocolo el cual ayuda a clientes NAT a encontrar su direccion pública lo cual es importante para 
        establecer esta sesion ya que estamos usando una IP privada.
 ** ¿Estamos tras un NAT?
        Sí.

8. La trama 46 es la primera trama SIP. En un entorno como el de Internet, lo habitual es desconocer la dirección IP de la otra parte al realizar una llamada. Por eso, todo usuario registra su localización en un servidor Registrar. El Registrar guarda información sobre los usuarios en un servidor de localización que puede ser utilizado para localizar usuarios.
 ** ¿Qué dirección IP tiene el servidor Registrar?
    IP REGITRAR=86.64.162.35
 ** ¿A qué puerto (del servidor Registrar) se envían los paquetes SIP?
    Puerto 5060
 ** ¿Qué método SIP utiliza el UA para registrarse?
    El método Register
 ** Además de REGISTER, ¿qué instrucciones SIP entiende el UA?
       INVITE,ACK,OPTIONS,BYE,CANCEL,NOTIFY,REFER,MESSAGE


[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

9. Fijémonos en las tramas siguientes a la número 46:
 ** ¿Se registra con éxito en el primer intento?
    No se registra a la primera
 ** ¿Cómo sabemos si el registro se ha realizado correctamente o no?
    Viendo la contestación del servidor la primera vez contesta 401 unauthorized por lo cual no le registra en la siguiente
    peticion la respuesta es 200 OK lo que indica que te ha registrado correctamente
 ** ¿Podrías identificar las diferencias entre el primer intento y el segundo de registro? (fíjate en el tamaño de los paquetes y mira a qué se debe el cambio)
    La diferencia entre uno y otro es el campo authorized el cual es una especie de clave que te envia el servidor en el primer rechazo de register para que puedas registrarte.
 ** ¿Cuánto es el valor del tiempo de expiración de la sesión? Indica las unidades.
        Expires=3600

10. Una vez registrados, podemos efectuar una llamada. Vamos a probar con el servicio de eco de Ekiga que nos permite comprobar si nos hemos conectado correctamente. El servicio de eco tiene la dirección sip:500@ekiga.net. Veamos el INVITE de cerca.
 ** ¿Puede verse el nombre del que efectúa la llamada, así como su dirección SIP?
        Sí
 ** ¿Qué es lo que contiene el cuerpo de la trama? ¿En qué formato/protocolo está?
        El protocolo usado con todos los datos, en este caso el protocolo es SDP
 ** ¿Tiene éxito el primer intento? ¿Cómo lo sabes?
        No porque el servidor le contesta diciendole que necesita la autenticacion del servidor proxy
 ** ¿En qué se diferencia el segundo INVITE más abajo del primero? ¿A qué crees que se debe esto?
        En el segundo INVITE el usuario que realiza la llamada incluye la autenticacion del proxy que el servidor le ha facilitado anteriormente.


11. Una vez conectado, estudia el intercambio de tramas.
 ** ¿Qué protocolo(s) se utiliza(n)? ¿Para qué sirven estos protocolos?
        RTP que sirve para transportar mensajes o tramas 
 ** ¿Cuál es el tamaño de paquete de los mismos?
        El tamaño para RTP es de 214 bytes
 ** ¿Se utilizan bits de padding?
        No los bits de padding aparecen a 0
 ** ¿Cuál es la periodicidad de los paquetes que se envían?
        0,02 segundos aproximadamente
 ** ¿Cuántos bits/segundo estamos enviando?
        65056 bits/segundo aproximadamente



[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

12. Vamos a ver más a fondo el intercambio RTP. En Telephony hay una opción RTP. Empecemos mirando los flujos RTP.
 ** ¿Cuántos flujos hay? ¿por qué?
       Aparecen dos flujos RTP debido a que uno se usa para audio y otro para video
 ** ¿Cuántos paquetes se pierden?
        No se pierde ningun paquete
 ** ¿Cuál es el valor máximo del delta? ¿Y qué es lo que significa el valor de delta?
        1290,48 ms. Significa el máximo retardo que podemos tener de un paquete
 ** ¿Cuáles son los valores de jitter (medio y máximo)? ¿Qué quiere decir eso? ¿Estamos ante una conversación de calidad?
        Para el primer flujo tenemos un jitter maximo de 183,10 ms y medio de 153,24 ms. Para el segundo flujo el maximo es de 119,64 y
        el medio de 42,50. El jitter indica la variacion del retardo hay bastante diferencia entre uno y otro flujo por lo cual la calidad no
        es demasiado alta.

13. Elige un paquete RTP de audio. Analiza el flujo de audio en Telephony -> RTP -> Stream Analysis.
 ** ¿Cuánto valen el delta y el jitter para el primer paquete que ha llegado?
        0.00 para ambos casos
 ** ¿Podemos saber si éste es el primer paquete que nos han enviado?
        Si por el numero de secuencia.
 ** Los valores de jitter son menores de 10ms hasta un paquete dado. ¿Cuál?
        Hasta el paqeute numero 4(seq 116)
 ** ¿A qué se debe el cambio tan brusco del jitter?
        Porque el valor de la delta aumenta notablemente y esto a su vez afecta al jitter
 ** ¿Es comparable este cambio con el tiempo desde la recepción del paquete anterior? ¿Por qué?
        Si porque el jitter depende de la delta
 ** ¿Cuál es la dependencia entre el tiempo transcurrido desde el paquete anterior y el valor de jitter?
        1/16 por la formula

14. En Telephony selecciona el menú VoIP calls. Verás que se lista la llamada de voz IP capturada en una ventana emergente. Selecciona esa llamada y pulsa el botón Graph.
 ** ¿Cuánto dura la conversación?
        25 segundos aproximadamente
 ** ¿Cuáles son sus SSRC? ¿Por qué hay varios SSRCs? ¿Hay CSRCs?
    Para el audio 0xBF4AFD37 y para el video 0x43306582, hay uno para cada flujo de datos. No hay CSRCs

15. Identifica la trama donde se finaliza la conversación.
 ** ¿Qué método SIP se utiliza?
    BYE
 ** ¿En qué trama(s)?
        Desde la trama 924,925,927 y 933
 ** ¿Por qué crees que se envía varias veces?
        Porque no recibe la confirmacion del servidor de que le a llegado el mensaje

16. Finalmente, se cierra la aplicación de VozIP.
 ** ¿Por qué aparece una instrucción SIP del tipo REGISTER?
        Para que el servidor lo elimine ya que envia un tiempo de expiracion de 0
 ** ¿En qué trama sucede esto?
        950
 ** ¿En qué se diferencia con la instrucción que se utilizó con anterioridad (al principio de la sesión)?
        En el tiempo de expiracion que es 0


[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

================================================================================
================================================================================

Captura de una sesión SIP

Captura una sesión SIP de una conversación con el número SIP sip:9999@qxip.net. Tendrás que dar de alta una cuenta en www.ekiga.net con el navegador. Recuerda también que has de comenzar a capturar tramas antes de arrancar Ekiga para ver todo el proceso en el que participa SIP. Para realizar los siguientes ejercicios, deberás crearte una cuenta en ekiga.net y darte de alta la lanzar la aplicación.

17. Observa las diferencias en el inicio de la conversación entre el entorno del laboratorio y el del ejercicio anterior:
 ** ¿Es necesario el uso de DNS y STUN? ¿Por qué?
 ** ¿Son diferentes el registro y la descripción de la sesión?
        El registro es el mismo se usan dos Register la diferencia es al finalizar la sesión que solo se usa un BYE

18. Identifica las diferencias existentes entre esta conversación y la conversación anterior:
 ** ¿Cuántos flujos tenemos?
        Tenemos un solo flujo el de audio uno enviado porcel contacto al que llamamos y otro por nosotros
 ** ¿Cuál es su periodicidad?
        
 ** ¿Cuánto es el valor máximo del delta y los valores medios y máximo del jitter?
        El valor maximo de delta es 23,49 para el contacto y 23,65 para nosotros. Valores maximos 0,94 para el contacto  y 0,96 para nosotros y medios 0,27 para el contacto  y 0,23 para nosotros
 ** ¿Podrías reproducir la conversación desde Wireshark? ¿Cómo? Comprueba que poniendo un valor demasiado pequeño para el buffer de jitter, la conversación puede no tener la calidad necesaria.
    Sí, seleccionamos un paquete RTP de audio pichamos en Telephony Voip Calls se nos abirar una ventana seleccionamos el flujo
    de audio y pinchamos en player tras esto pinchamos en decode y reproducimos el audio
 ** ¿Sabrías decir qué tipo de servicio ofrece sip:9999@qxip.net?
    Es un servicio el cual sirve para hacer captursa te coje la llamada y te devuelve un audio para realizar pruebas.


[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

19. Filtra por los paquetes SIP de la captura y guarda únicamente los paquetes SIP como sip.libpcap. Abre el fichero guardado para cerciorarte de que lo has hecho bien. Deberás guardarlo en un archivo de nombre p5.libpcap y añadirlo al repositorio.

[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

[Al terminar la práctica, realiza un push para sincronizar tu repositorio GitHub]

[Recuerda mirar el guión para ver las instrucciones de entrega]
